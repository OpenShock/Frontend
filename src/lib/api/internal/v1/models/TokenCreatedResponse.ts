/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PermissionType } from './PermissionType';
import {
    PermissionTypeFromJSON,
    PermissionTypeFromJSONTyped,
    PermissionTypeToJSON,
    PermissionTypeToJSONTyped,
} from './PermissionType';

/**
 * 
 * @export
 * @interface TokenCreatedResponse
 */
export interface TokenCreatedResponse {
    /**
     * 
     * @type {string}
     * @memberof TokenCreatedResponse
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof TokenCreatedResponse
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof TokenCreatedResponse
     */
    token: string;
    /**
     * 
     * @type {Date}
     * @memberof TokenCreatedResponse
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof TokenCreatedResponse
     */
    validUntil: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof TokenCreatedResponse
     */
    lastUsed: Date;
    /**
     * 
     * @type {Array<PermissionType>}
     * @memberof TokenCreatedResponse
     */
    permissions: Array<PermissionType>;
}

/**
 * Check if a given object implements the TokenCreatedResponse interface.
 */
export function instanceOfTokenCreatedResponse(value: object): value is TokenCreatedResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('token' in value) || value['token'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('validUntil' in value) || value['validUntil'] === undefined) return false;
    if (!('lastUsed' in value) || value['lastUsed'] === undefined) return false;
    if (!('permissions' in value) || value['permissions'] === undefined) return false;
    return true;
}

export function TokenCreatedResponseFromJSON(json: any): TokenCreatedResponse {
    return TokenCreatedResponseFromJSONTyped(json, false);
}

export function TokenCreatedResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenCreatedResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'token': json['token'],
        'createdAt': (new Date(json['createdAt'])),
        'validUntil': (json['validUntil'] == null ? null : new Date(json['validUntil'])),
        'lastUsed': (new Date(json['lastUsed'])),
        'permissions': ((json['permissions'] as Array<any>).map(PermissionTypeFromJSON)),
    };
}

export function TokenCreatedResponseToJSON(json: any): TokenCreatedResponse {
    return TokenCreatedResponseToJSONTyped(json, false);
}

export function TokenCreatedResponseToJSONTyped(value?: TokenCreatedResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'token': value['token'],
        'createdAt': ((value['createdAt']).toISOString()),
        'validUntil': ((value['validUntil'] as any).toISOString()),
        'lastUsed': ((value['lastUsed']).toISOString()),
        'permissions': ((value['permissions'] as Array<any>).map(PermissionTypeToJSON)),
    };
}

