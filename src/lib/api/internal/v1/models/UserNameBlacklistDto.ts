/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MatchTypeEnum } from './MatchTypeEnum';
import {
    MatchTypeEnumFromJSON,
    MatchTypeEnumFromJSONTyped,
    MatchTypeEnumToJSON,
    MatchTypeEnumToJSONTyped,
} from './MatchTypeEnum';

/**
 * 
 * @export
 * @interface UserNameBlacklistDto
 */
export interface UserNameBlacklistDto {
    /**
     * 
     * @type {string}
     * @memberof UserNameBlacklistDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof UserNameBlacklistDto
     */
    value: string;
    /**
     * 
     * @type {MatchTypeEnum}
     * @memberof UserNameBlacklistDto
     */
    matchType: MatchTypeEnum;
    /**
     * 
     * @type {Date}
     * @memberof UserNameBlacklistDto
     */
    createdAt: Date;
}



/**
 * Check if a given object implements the UserNameBlacklistDto interface.
 */
export function instanceOfUserNameBlacklistDto(value: object): value is UserNameBlacklistDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('matchType' in value) || value['matchType'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function UserNameBlacklistDtoFromJSON(json: any): UserNameBlacklistDto {
    return UserNameBlacklistDtoFromJSONTyped(json, false);
}

export function UserNameBlacklistDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserNameBlacklistDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'value': json['value'],
        'matchType': MatchTypeEnumFromJSON(json['matchType']),
        'createdAt': (new Date(json['createdAt'])),
    };
}

export function UserNameBlacklistDtoToJSON(json: any): UserNameBlacklistDto {
    return UserNameBlacklistDtoToJSONTyped(json, false);
}

export function UserNameBlacklistDtoToJSONTyped(value?: UserNameBlacklistDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'value': value['value'],
        'matchType': MatchTypeEnumToJSON(value['matchType']),
        'createdAt': ((value['createdAt']).toISOString()),
    };
}

