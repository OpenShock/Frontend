/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AdminUserCountsResponse
 */
export interface AdminUserCountsResponse {
    /**
     * 
     * @type {number}
     * @memberof AdminUserCountsResponse
     */
    devices: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUserCountsResponse
     */
    shockers: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUserCountsResponse
     */
    apiTokens: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUserCountsResponse
     */
    passwordResetRequests: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUserCountsResponse
     */
    shockerControlLogs: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUserCountsResponse
     */
    shockerShares: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUserCountsResponse
     */
    shockerShareLinks: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUserCountsResponse
     */
    changeNameRequests: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUserCountsResponse
     */
    changeEmailRequests: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUserCountsResponse
     */
    createUserRequests: number;
}

/**
 * Check if a given object implements the AdminUserCountsResponse interface.
 */
export function instanceOfAdminUserCountsResponse(value: object): value is AdminUserCountsResponse {
    if (!('devices' in value) || value['devices'] === undefined) return false;
    if (!('shockers' in value) || value['shockers'] === undefined) return false;
    if (!('apiTokens' in value) || value['apiTokens'] === undefined) return false;
    if (!('passwordResetRequests' in value) || value['passwordResetRequests'] === undefined) return false;
    if (!('shockerControlLogs' in value) || value['shockerControlLogs'] === undefined) return false;
    if (!('shockerShares' in value) || value['shockerShares'] === undefined) return false;
    if (!('shockerShareLinks' in value) || value['shockerShareLinks'] === undefined) return false;
    if (!('changeNameRequests' in value) || value['changeNameRequests'] === undefined) return false;
    if (!('changeEmailRequests' in value) || value['changeEmailRequests'] === undefined) return false;
    if (!('createUserRequests' in value) || value['createUserRequests'] === undefined) return false;
    return true;
}

export function AdminUserCountsResponseFromJSON(json: any): AdminUserCountsResponse {
    return AdminUserCountsResponseFromJSONTyped(json, false);
}

export function AdminUserCountsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminUserCountsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'devices': json['devices'],
        'shockers': json['shockers'],
        'apiTokens': json['apiTokens'],
        'passwordResetRequests': json['passwordResetRequests'],
        'shockerControlLogs': json['shockerControlLogs'],
        'shockerShares': json['shockerShares'],
        'shockerShareLinks': json['shockerShareLinks'],
        'changeNameRequests': json['changeNameRequests'],
        'changeEmailRequests': json['changeEmailRequests'],
        'createUserRequests': json['createUserRequests'],
    };
}

  export function AdminUserCountsResponseToJSON(json: any): AdminUserCountsResponse {
      return AdminUserCountsResponseToJSONTyped(json, false);
  }

  export function AdminUserCountsResponseToJSONTyped(value?: AdminUserCountsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'devices': value['devices'],
        'shockers': value['shockers'],
        'apiTokens': value['apiTokens'],
        'passwordResetRequests': value['passwordResetRequests'],
        'shockerControlLogs': value['shockerControlLogs'],
        'shockerShares': value['shockerShares'],
        'shockerShareLinks': value['shockerShareLinks'],
        'changeNameRequests': value['changeNameRequests'],
        'changeEmailRequests': value['changeEmailRequests'],
        'createUserRequests': value['createUserRequests'],
    };
}

