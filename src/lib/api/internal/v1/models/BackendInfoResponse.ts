/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BackendInfoResponse
 */
export interface BackendInfoResponse {
    /**
     * 
     * @type {string}
     * @memberof BackendInfoResponse
     */
    version: string;
    /**
     * 
     * @type {string}
     * @memberof BackendInfoResponse
     */
    commit: string;
    /**
     * 
     * @type {Date}
     * @memberof BackendInfoResponse
     */
    currentTime: Date;
    /**
     * 
     * @type {string}
     * @memberof BackendInfoResponse
     */
    frontendUrl: string;
    /**
     * 
     * @type {string}
     * @memberof BackendInfoResponse
     */
    shortLinkUrl: string;
    /**
     * 
     * @type {string}
     * @memberof BackendInfoResponse
     */
    turnstileSiteKey: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof BackendInfoResponse
     */
    oAuthProviders: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof BackendInfoResponse
     */
    isUserAuthenticated: boolean;
}

/**
 * Check if a given object implements the BackendInfoResponse interface.
 */
export function instanceOfBackendInfoResponse(value: object): value is BackendInfoResponse {
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('commit' in value) || value['commit'] === undefined) return false;
    if (!('currentTime' in value) || value['currentTime'] === undefined) return false;
    if (!('frontendUrl' in value) || value['frontendUrl'] === undefined) return false;
    if (!('shortLinkUrl' in value) || value['shortLinkUrl'] === undefined) return false;
    if (!('turnstileSiteKey' in value) || value['turnstileSiteKey'] === undefined) return false;
    if (!('oAuthProviders' in value) || value['oAuthProviders'] === undefined) return false;
    if (!('isUserAuthenticated' in value) || value['isUserAuthenticated'] === undefined) return false;
    return true;
}

export function BackendInfoResponseFromJSON(json: any): BackendInfoResponse {
    return BackendInfoResponseFromJSONTyped(json, false);
}

export function BackendInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BackendInfoResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'version': json['version'],
        'commit': json['commit'],
        'currentTime': (new Date(json['currentTime'])),
        'frontendUrl': json['frontendUrl'],
        'shortLinkUrl': json['shortLinkUrl'],
        'turnstileSiteKey': json['turnstileSiteKey'],
        'oAuthProviders': json['oAuthProviders'],
        'isUserAuthenticated': json['isUserAuthenticated'],
    };
}

export function BackendInfoResponseToJSON(json: any): BackendInfoResponse {
    return BackendInfoResponseToJSONTyped(json, false);
}

export function BackendInfoResponseToJSONTyped(value?: BackendInfoResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'version': value['version'],
        'commit': value['commit'],
        'currentTime': value['currentTime'].toISOString(),
        'frontendUrl': value['frontendUrl'],
        'shortLinkUrl': value['shortLinkUrl'],
        'turnstileSiteKey': value['turnstileSiteKey'],
        'oAuthProviders': value['oAuthProviders'],
        'isUserAuthenticated': value['isUserAuthenticated'],
    };
}

