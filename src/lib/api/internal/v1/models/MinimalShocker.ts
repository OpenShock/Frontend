/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ShockerModelType } from './ShockerModelType';
import {
    ShockerModelTypeFromJSON,
    ShockerModelTypeFromJSONTyped,
    ShockerModelTypeToJSON,
    ShockerModelTypeToJSONTyped,
} from './ShockerModelType';

/**
 * 
 * @export
 * @interface MinimalShocker
 */
export interface MinimalShocker {
    /**
     * 
     * @type {string}
     * @memberof MinimalShocker
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof MinimalShocker
     */
    rfId: number;
    /**
     * 
     * @type {ShockerModelType}
     * @memberof MinimalShocker
     */
    model: ShockerModelType;
}



/**
 * Check if a given object implements the MinimalShocker interface.
 */
export function instanceOfMinimalShocker(value: object): value is MinimalShocker {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('rfId' in value) || value['rfId'] === undefined) return false;
    if (!('model' in value) || value['model'] === undefined) return false;
    return true;
}

export function MinimalShockerFromJSON(json: any): MinimalShocker {
    return MinimalShockerFromJSONTyped(json, false);
}

export function MinimalShockerFromJSONTyped(json: any, ignoreDiscriminator: boolean): MinimalShocker {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'rfId': json['rfId'],
        'model': ShockerModelTypeFromJSON(json['model']),
    };
}

  export function MinimalShockerToJSON(json: any): MinimalShocker {
      return MinimalShockerToJSONTyped(json, false);
  }

  export function MinimalShockerToJSONTyped(value?: MinimalShocker | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'rfId': value['rfId'],
        'model': ShockerModelTypeToJSON(value['model']),
    };
}

