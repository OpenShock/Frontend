/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PermissionType } from './PermissionType';
import {
    PermissionTypeFromJSON,
    PermissionTypeFromJSONTyped,
    PermissionTypeToJSON,
    PermissionTypeToJSONTyped,
} from './PermissionType';

/**
 * 
 * @export
 * @interface EditTokenRequest
 */
export interface EditTokenRequest {
    /**
     * 
     * @type {string}
     * @memberof EditTokenRequest
     */
    name: string;
    /**
     * 
     * @type {Array<PermissionType>}
     * @memberof EditTokenRequest
     */
    permissions: Array<PermissionType>;
}

/**
 * Check if a given object implements the EditTokenRequest interface.
 */
export function instanceOfEditTokenRequest(value: object): value is EditTokenRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('permissions' in value) || value['permissions'] === undefined) return false;
    return true;
}

export function EditTokenRequestFromJSON(json: any): EditTokenRequest {
    return EditTokenRequestFromJSONTyped(json, false);
}

export function EditTokenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): EditTokenRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'permissions': ((json['permissions'] as Array<any>).map(PermissionTypeFromJSON)),
    };
}

export function EditTokenRequestToJSON(json: any): EditTokenRequest {
    return EditTokenRequestToJSONTyped(json, false);
}

export function EditTokenRequestToJSONTyped(value?: EditTokenRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'permissions': ((value['permissions'] as Array<any>).map(PermissionTypeToJSON)),
    };
}

