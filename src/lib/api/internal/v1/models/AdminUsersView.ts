/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RankType } from './RankType';
import {
    RankTypeFromJSON,
    RankTypeFromJSONTyped,
    RankTypeToJSON,
    RankTypeToJSONTyped,
} from './RankType';

/**
 * 
 * @export
 * @interface AdminUsersView
 */
export interface AdminUsersView {
    /**
     * 
     * @type {string}
     * @memberof AdminUsersView
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AdminUsersView
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof AdminUsersView
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof AdminUsersView
     */
    passwordHashType?: string;
    /**
     * 
     * @type {Date}
     * @memberof AdminUsersView
     */
    createdAt?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof AdminUsersView
     */
    emailActivated?: boolean;
    /**
     * 
     * @type {RankType}
     * @memberof AdminUsersView
     */
    rank?: RankType;
    /**
     * 
     * @type {number}
     * @memberof AdminUsersView
     */
    apiTokenCount?: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUsersView
     */
    passwordResetCount?: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUsersView
     */
    shockerShareCount?: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUsersView
     */
    shockerShareLinkCount?: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUsersView
     */
    emailChangeRequestCount?: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUsersView
     */
    nameChangeRequestCount?: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUsersView
     */
    userActivationCount?: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUsersView
     */
    deviceCount?: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUsersView
     */
    shockerCount?: number;
    /**
     * 
     * @type {number}
     * @memberof AdminUsersView
     */
    shockerControlLogCount?: number;
}



/**
 * Check if a given object implements the AdminUsersView interface.
 */
export function instanceOfAdminUsersView(value: object): value is AdminUsersView {
    return true;
}

export function AdminUsersViewFromJSON(json: any): AdminUsersView {
    return AdminUsersViewFromJSONTyped(json, false);
}

export function AdminUsersViewFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminUsersView {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'email': json['email'] == null ? undefined : json['email'],
        'passwordHashType': json['passwordHashType'] == null ? undefined : json['passwordHashType'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'emailActivated': json['emailActivated'] == null ? undefined : json['emailActivated'],
        'rank': json['rank'] == null ? undefined : RankTypeFromJSON(json['rank']),
        'apiTokenCount': json['apiTokenCount'] == null ? undefined : json['apiTokenCount'],
        'passwordResetCount': json['passwordResetCount'] == null ? undefined : json['passwordResetCount'],
        'shockerShareCount': json['shockerShareCount'] == null ? undefined : json['shockerShareCount'],
        'shockerShareLinkCount': json['shockerShareLinkCount'] == null ? undefined : json['shockerShareLinkCount'],
        'emailChangeRequestCount': json['emailChangeRequestCount'] == null ? undefined : json['emailChangeRequestCount'],
        'nameChangeRequestCount': json['nameChangeRequestCount'] == null ? undefined : json['nameChangeRequestCount'],
        'userActivationCount': json['userActivationCount'] == null ? undefined : json['userActivationCount'],
        'deviceCount': json['deviceCount'] == null ? undefined : json['deviceCount'],
        'shockerCount': json['shockerCount'] == null ? undefined : json['shockerCount'],
        'shockerControlLogCount': json['shockerControlLogCount'] == null ? undefined : json['shockerControlLogCount'],
    };
}

  export function AdminUsersViewToJSON(json: any): AdminUsersView {
      return AdminUsersViewToJSONTyped(json, false);
  }

  export function AdminUsersViewToJSONTyped(value?: AdminUsersView | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'email': value['email'],
        'passwordHashType': value['passwordHashType'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'emailActivated': value['emailActivated'],
        'rank': RankTypeToJSON(value['rank']),
        'apiTokenCount': value['apiTokenCount'],
        'passwordResetCount': value['passwordResetCount'],
        'shockerShareCount': value['shockerShareCount'],
        'shockerShareLinkCount': value['shockerShareLinkCount'],
        'emailChangeRequestCount': value['emailChangeRequestCount'],
        'nameChangeRequestCount': value['nameChangeRequestCount'],
        'userActivationCount': value['userActivationCount'],
        'deviceCount': value['deviceCount'],
        'shockerCount': value['shockerCount'],
        'shockerControlLogCount': value['shockerControlLogCount'],
    };
}

