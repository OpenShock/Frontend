/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OAuthConnectionResponse
 */
export interface OAuthConnectionResponse {
    /**
     * 
     * @type {string}
     * @memberof OAuthConnectionResponse
     */
    providerKey: string;
    /**
     * 
     * @type {string}
     * @memberof OAuthConnectionResponse
     */
    externalId: string;
    /**
     * 
     * @type {string}
     * @memberof OAuthConnectionResponse
     */
    displayName: string | null;
    /**
     * 
     * @type {Date}
     * @memberof OAuthConnectionResponse
     */
    linkedAt: Date;
}

/**
 * Check if a given object implements the OAuthConnectionResponse interface.
 */
export function instanceOfOAuthConnectionResponse(value: object): value is OAuthConnectionResponse {
    if (!('providerKey' in value) || value['providerKey'] === undefined) return false;
    if (!('externalId' in value) || value['externalId'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('linkedAt' in value) || value['linkedAt'] === undefined) return false;
    return true;
}

export function OAuthConnectionResponseFromJSON(json: any): OAuthConnectionResponse {
    return OAuthConnectionResponseFromJSONTyped(json, false);
}

export function OAuthConnectionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OAuthConnectionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'providerKey': json['providerKey'],
        'externalId': json['externalId'],
        'displayName': json['displayName'],
        'linkedAt': (new Date(json['linkedAt'])),
    };
}

export function OAuthConnectionResponseToJSON(json: any): OAuthConnectionResponse {
    return OAuthConnectionResponseToJSONTyped(json, false);
}

export function OAuthConnectionResponseToJSONTyped(value?: OAuthConnectionResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'providerKey': value['providerKey'],
        'externalId': value['externalId'],
        'displayName': value['displayName'],
        'linkedAt': ((value['linkedAt']).toISOString()),
    };
}

