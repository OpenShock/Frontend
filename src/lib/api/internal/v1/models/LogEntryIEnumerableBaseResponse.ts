/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LogEntry } from './LogEntry';
import {
    LogEntryFromJSON,
    LogEntryFromJSONTyped,
    LogEntryToJSON,
} from './LogEntry';

/**
 * 
 * @export
 * @interface LogEntryIEnumerableBaseResponse
 */
export interface LogEntryIEnumerableBaseResponse {
    /**
     * 
     * @type {string}
     * @memberof LogEntryIEnumerableBaseResponse
     */
    message?: string | null;
    /**
     * 
     * @type {Array<LogEntry>}
     * @memberof LogEntryIEnumerableBaseResponse
     */
    data?: Array<LogEntry> | null;
}

/**
 * Check if a given object implements the LogEntryIEnumerableBaseResponse interface.
 */
export function instanceOfLogEntryIEnumerableBaseResponse(value: object): value is LogEntryIEnumerableBaseResponse {
    return true;
}

export function LogEntryIEnumerableBaseResponseFromJSON(json: any): LogEntryIEnumerableBaseResponse {
    return LogEntryIEnumerableBaseResponseFromJSONTyped(json, false);
}

export function LogEntryIEnumerableBaseResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LogEntryIEnumerableBaseResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'] == null ? undefined : json['message'],
        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(LogEntryFromJSON)),
    };
}

export function LogEntryIEnumerableBaseResponseToJSON(value?: LogEntryIEnumerableBaseResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'message': value['message'],
        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(LogEntryToJSON)),
    };
}

