/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OAuthFinalizeResponse
 */
export interface OAuthFinalizeResponse {
    /**
     * The provider key that was processed.
     * @type {string}
     * @memberof OAuthFinalizeResponse
     */
    provider: string;
    /**
     * The external account id that was linked.
     * @type {string}
     * @memberof OAuthFinalizeResponse
     */
    externalId: string;
    /**
     * When action=create, the username of the newly created account.
     * @type {string}
     * @memberof OAuthFinalizeResponse
     */
    username: string | null;
}

/**
 * Check if a given object implements the OAuthFinalizeResponse interface.
 */
export function instanceOfOAuthFinalizeResponse(value: object): value is OAuthFinalizeResponse {
    if (!('provider' in value) || value['provider'] === undefined) return false;
    if (!('externalId' in value) || value['externalId'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    return true;
}

export function OAuthFinalizeResponseFromJSON(json: any): OAuthFinalizeResponse {
    return OAuthFinalizeResponseFromJSONTyped(json, false);
}

export function OAuthFinalizeResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OAuthFinalizeResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'provider': json['provider'],
        'externalId': json['externalId'],
        'username': json['username'],
    };
}

export function OAuthFinalizeResponseToJSON(json: any): OAuthFinalizeResponse {
    return OAuthFinalizeResponseToJSONTyped(json, false);
}

export function OAuthFinalizeResponseToJSONTyped(value?: OAuthFinalizeResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'provider': value['provider'],
        'externalId': value['externalId'],
        'username': value['username'],
    };
}

