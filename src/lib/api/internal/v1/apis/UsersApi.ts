/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BasicUserInfo,
  OpenShockProblem,
  UserSelfResponseLegacyDataResponse,
} from '../models/index';
import {
    BasicUserInfoFromJSON,
    BasicUserInfoToJSON,
    OpenShockProblemFromJSON,
    OpenShockProblemToJSON,
    UserSelfResponseLegacyDataResponseFromJSON,
    UserSelfResponseLegacyDataResponseToJSON,
} from '../models/index';

export interface UsersGetByNameRequest {
    username: string;
}

/**
 * UsersApi - interface
 * 
 * @export
 * @interface UsersApiInterface
 */
export interface UsersApiInterface {
    /**
     * 
     * @param {string} username 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApiInterface
     */
    usersGetByNameRaw(requestParameters: UsersGetByNameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BasicUserInfo>>;

    /**
     */
    usersGetByName(username: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BasicUserInfo>;

    /**
     * 
     * @summary Get the current user\'s information.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApiInterface
     */
    usersGetSelfRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserSelfResponseLegacyDataResponse>>;

    /**
     * Get the current user\'s information.
     */
    usersGetSelf(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserSelfResponseLegacyDataResponse>;

}

/**
 * 
 */
export class UsersApi extends runtime.BaseAPI implements UsersApiInterface {

    /**
     */
    async usersGetByNameRaw(requestParameters: UsersGetByNameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BasicUserInfo>> {
        if (requestParameters['username'] == null) {
            throw new runtime.RequiredError(
                'username',
                'Required parameter "username" was null or undefined when calling usersGetByName().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["OpenShockToken"] = await this.configuration.apiKey("OpenShockToken"); // ApiToken authentication
        }


        let urlPath = `/1/users/by-name/{username}`;
        urlPath = urlPath.replace(`{${"username"}}`, encodeURIComponent(String(requestParameters['username'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BasicUserInfoFromJSON(jsonValue));
    }

    /**
     */
    async usersGetByName(username: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BasicUserInfo> {
        const response = await this.usersGetByNameRaw({ username: username }, initOverrides);
        return await response.value();
    }

    /**
     * Get the current user\'s information.
     */
    async usersGetSelfRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserSelfResponseLegacyDataResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["OpenShockToken"] = await this.configuration.apiKey("OpenShockToken"); // ApiToken authentication
        }


        let urlPath = `/1/users/self`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserSelfResponseLegacyDataResponseFromJSON(jsonValue));
    }

    /**
     * Get the current user\'s information.
     */
    async usersGetSelf(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserSelfResponseLegacyDataResponse> {
        const response = await this.usersGetSelfRaw(initOverrides);
        return await response.value();
    }

}
