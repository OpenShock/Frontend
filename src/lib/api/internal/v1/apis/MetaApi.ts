/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiVersionResponseLegacyDataResponse,
  StatsResponseLegacyDataResponse,
} from '../models/index';
import {
    ApiVersionResponseLegacyDataResponseFromJSON,
    ApiVersionResponseLegacyDataResponseToJSON,
    StatsResponseLegacyDataResponseFromJSON,
    StatsResponseLegacyDataResponseToJSON,
} from '../models/index';

/**
 * MetaApi - interface
 * 
 * @export
 * @interface MetaApiInterface
 */
export interface MetaApiInterface {
    /**
     * 
     * @summary Gets online devices statistics
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MetaApiInterface
     */
    publicGetOnlineDevicesStatisticsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StatsResponseLegacyDataResponse>>;

    /**
     * Gets online devices statistics
     */
    publicGetOnlineDevicesStatistics(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StatsResponseLegacyDataResponse>;

    /**
     * 
     * @summary Gets the version of the OpenShock backend.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MetaApiInterface
     */
    versionGetBackendVersionRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiVersionResponseLegacyDataResponse>>;

    /**
     * Gets the version of the OpenShock backend.
     */
    versionGetBackendVersion(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiVersionResponseLegacyDataResponse>;

}

/**
 * 
 */
export class MetaApi extends runtime.BaseAPI implements MetaApiInterface {

    /**
     * Gets online devices statistics
     */
    async publicGetOnlineDevicesStatisticsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StatsResponseLegacyDataResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/1/public/stats`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StatsResponseLegacyDataResponseFromJSON(jsonValue));
    }

    /**
     * Gets online devices statistics
     */
    async publicGetOnlineDevicesStatistics(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StatsResponseLegacyDataResponse> {
        const response = await this.publicGetOnlineDevicesStatisticsRaw(initOverrides);
        return await response.value();
    }

    /**
     * Gets the version of the OpenShock backend.
     */
    async versionGetBackendVersionRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiVersionResponseLegacyDataResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/1`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiVersionResponseLegacyDataResponseFromJSON(jsonValue));
    }

    /**
     * Gets the version of the OpenShock backend.
     */
    async versionGetBackendVersion(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiVersionResponseLegacyDataResponse> {
        const response = await this.versionGetBackendVersionRaw(initOverrides);
        return await response.value();
    }

}
