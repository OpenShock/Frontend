/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  TokenResponse,
} from '../models/index';
import {
    TokenResponseFromJSON,
    TokenResponseToJSON,
} from '../models/index';

/**
 * TokensSelfApi - interface
 * 
 * @export
 * @interface TokensSelfApiInterface
 */
export interface TokensSelfApiInterface {
    /**
     * 
     * @summary Gets information about the current token used to access this endpoint
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TokensSelfApiInterface
     */
    tokensSelfGetSelfTokenRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TokenResponse>>;

    /**
     * Gets information about the current token used to access this endpoint
     */
    tokensSelfGetSelfToken(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TokenResponse>;

}

/**
 * 
 */
export class TokensSelfApi extends runtime.BaseAPI implements TokensSelfApiInterface {

    /**
     * Gets information about the current token used to access this endpoint
     */
    async tokensSelfGetSelfTokenRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TokenResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["OpenShockToken"] = await this.configuration.apiKey("OpenShockToken"); // ApiToken authentication
        }

        const response = await this.request({
            path: `/1/tokens/self`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TokenResponseFromJSON(jsonValue));
    }

    /**
     * Gets information about the current token used to access this endpoint
     */
    async tokensSelfGetSelfToken(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TokenResponse> {
        const response = await this.tokensSelfGetSelfTokenRaw(initOverrides);
        return await response.value();
    }

}
