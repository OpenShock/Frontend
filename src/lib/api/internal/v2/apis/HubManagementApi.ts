/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HubCreateRequest,
} from '../models/index';
import {
    HubCreateRequestFromJSON,
    HubCreateRequestToJSON,
} from '../models/index';

export interface DevicesCreateDeviceV2Request {
    hubCreateRequest?: HubCreateRequest;
}

/**
 * HubManagementApi - interface
 * 
 * @export
 * @interface HubManagementApiInterface
 */
export interface HubManagementApiInterface {
    /**
     * 
     * @summary Create a new device for the current user
     * @param {HubCreateRequest} [hubCreateRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HubManagementApiInterface
     */
    devicesCreateDeviceV2Raw(requestParameters: DevicesCreateDeviceV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;

    /**
     * Create a new device for the current user
     */
    devicesCreateDeviceV2(hubCreateRequest?: HubCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;

}

/**
 * 
 */
export class HubManagementApi extends runtime.BaseAPI implements HubManagementApiInterface {

    /**
     * Create a new device for the current user
     */
    async devicesCreateDeviceV2Raw(requestParameters: DevicesCreateDeviceV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["OpenShockToken"] = await this.configuration.apiKey("OpenShockToken"); // ApiToken authentication
        }

        const response = await this.request({
            path: `/2/devices`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: HubCreateRequestToJSON(requestParameters['hubCreateRequest']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Create a new device for the current user
     */
    async devicesCreateDeviceV2(hubCreateRequest?: HubCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.devicesCreateDeviceV2Raw({ hubCreateRequest: hubCreateRequest }, initOverrides);
        return await response.value();
    }

}
