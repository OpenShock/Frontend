/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ChangeUsernameRequest,
  LoginV2,
  ObjectBaseResponse,
  OpenShockProblem,
  SignUpV2,
  UsernameCheckResponse,
} from '../models/index';
import {
    ChangeUsernameRequestFromJSON,
    ChangeUsernameRequestToJSON,
    LoginV2FromJSON,
    LoginV2ToJSON,
    ObjectBaseResponseFromJSON,
    ObjectBaseResponseToJSON,
    OpenShockProblemFromJSON,
    OpenShockProblemToJSON,
    SignUpV2FromJSON,
    SignUpV2ToJSON,
    UsernameCheckResponseFromJSON,
    UsernameCheckResponseToJSON,
} from '../models/index';

export interface AccountCheckUsernameRequest {
    changeUsernameRequest?: ChangeUsernameRequest;
}

export interface AccountLoginV2Request {
    loginV2?: LoginV2;
}

export interface AccountSignUpV2Request {
    signUpV2?: SignUpV2;
}

/**
 * AccountApi - interface
 * 
 * @export
 * @interface AccountApiInterface
 */
export interface AccountApiInterface {
    /**
     * 
     * @summary Check if a username is available
     * @param {ChangeUsernameRequest} [changeUsernameRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccountApiInterface
     */
    accountCheckUsernameRaw(requestParameters: AccountCheckUsernameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UsernameCheckResponse>>;

    /**
     * Check if a username is available
     */
    accountCheckUsername(changeUsernameRequest?: ChangeUsernameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UsernameCheckResponse>;

    /**
     * 
     * @summary Authenticate a user
     * @param {LoginV2} [loginV2] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccountApiInterface
     */
    accountLoginV2Raw(requestParameters: AccountLoginV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ObjectBaseResponse>>;

    /**
     * Authenticate a user
     */
    accountLoginV2(loginV2?: LoginV2, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ObjectBaseResponse>;

    /**
     * 
     * @summary Signs up a new user
     * @param {SignUpV2} [signUpV2] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccountApiInterface
     */
    accountSignUpV2Raw(requestParameters: AccountSignUpV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ObjectBaseResponse>>;

    /**
     * Signs up a new user
     */
    accountSignUpV2(signUpV2?: SignUpV2, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ObjectBaseResponse>;

}

/**
 * 
 */
export class AccountApi extends runtime.BaseAPI implements AccountApiInterface {

    /**
     * Check if a username is available
     */
    async accountCheckUsernameRaw(requestParameters: AccountCheckUsernameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UsernameCheckResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/2/account/username/check`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ChangeUsernameRequestToJSON(requestParameters['changeUsernameRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UsernameCheckResponseFromJSON(jsonValue));
    }

    /**
     * Check if a username is available
     */
    async accountCheckUsername(changeUsernameRequest?: ChangeUsernameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UsernameCheckResponse> {
        const response = await this.accountCheckUsernameRaw({ changeUsernameRequest: changeUsernameRequest }, initOverrides);
        return await response.value();
    }

    /**
     * Authenticate a user
     */
    async accountLoginV2Raw(requestParameters: AccountLoginV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ObjectBaseResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/2/account/login`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LoginV2ToJSON(requestParameters['loginV2']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ObjectBaseResponseFromJSON(jsonValue));
    }

    /**
     * Authenticate a user
     */
    async accountLoginV2(loginV2?: LoginV2, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ObjectBaseResponse> {
        const response = await this.accountLoginV2Raw({ loginV2: loginV2 }, initOverrides);
        return await response.value();
    }

    /**
     * Signs up a new user
     */
    async accountSignUpV2Raw(requestParameters: AccountSignUpV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ObjectBaseResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/2/account/signup`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SignUpV2ToJSON(requestParameters['signUpV2']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ObjectBaseResponseFromJSON(jsonValue));
    }

    /**
     * Signs up a new user
     */
    async accountSignUpV2(signUpV2?: SignUpV2, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ObjectBaseResponse> {
        const response = await this.accountSignUpV2Raw({ signUpV2: signUpV2 }, initOverrides);
        return await response.value();
    }

}
