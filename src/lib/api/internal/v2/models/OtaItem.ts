/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OtaUpdateStatus } from './OtaUpdateStatus';
import {
    OtaUpdateStatusFromJSON,
    OtaUpdateStatusFromJSONTyped,
    OtaUpdateStatusToJSON,
    OtaUpdateStatusToJSONTyped,
} from './OtaUpdateStatus';

/**
 * 
 * @export
 * @interface OtaItem
 */
export interface OtaItem {
    /**
     * 
     * @type {number}
     * @memberof OtaItem
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof OtaItem
     */
    startedAt: Date;
    /**
     * 
     * @type {OtaUpdateStatus}
     * @memberof OtaItem
     */
    status: OtaUpdateStatus;
    /**
     * 
     * @type {string}
     * @memberof OtaItem
     */
    version: string;
    /**
     * 
     * @type {string}
     * @memberof OtaItem
     */
    message: string | null;
}



/**
 * Check if a given object implements the OtaItem interface.
 */
export function instanceOfOtaItem(value: object): value is OtaItem {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('startedAt' in value) || value['startedAt'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    return true;
}

export function OtaItemFromJSON(json: any): OtaItem {
    return OtaItemFromJSONTyped(json, false);
}

export function OtaItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): OtaItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'startedAt': (new Date(json['startedAt'])),
        'status': OtaUpdateStatusFromJSON(json['status']),
        'version': json['version'],
        'message': json['message'],
    };
}

export function OtaItemToJSON(json: any): OtaItem {
    return OtaItemToJSONTyped(json, false);
}

export function OtaItemToJSONTyped(value?: OtaItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'startedAt': ((value['startedAt']).toISOString()),
        'status': OtaUpdateStatusToJSON(value['status']),
        'version': value['version'],
        'message': value['message'],
    };
}

